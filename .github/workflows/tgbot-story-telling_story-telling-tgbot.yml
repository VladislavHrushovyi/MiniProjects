name: .NET Core

env:
  BINARIES: './mywebjob' 
  ZIP_FILE: 'webjob.zip'
  ZIP_PATH: './output'
  ZIP_FILEPATH: './output/webjob.zip'

on:
  push:
    branches: 
      - tgbot-story-telling

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
            dotnet-version: '8.x'
            include-prerelease: true

      - name: Install dependencies
        run: dotnet restore 

      - name: Build
        run: dotnet build --configuration Release --no-restore --output ${{env.BINARIES}}

      - name: Zip
        if: github.event_name != 'pull_request' # skip on PRs
        uses: nguyenquyhy/zip-release@v0.3.0
        with:
          filename: '${{env.ZIP_FILE}}'
          workingDirectory:  ${{env.ZIP_PATH}}
          exclusions: 'worker.exe app_data/**/unix/*' # skip .exe and Unix runtime as deployment will be to a Windows App Service

      - name: Deploy to Test (develop branch) # skip on PRs
        if: github.ref == 'refs/heads/develop' && github.event_name != 'pull_request' # skip on PRs, deploy develop branch to the test environment
        uses: srijken/azure-zip-deploy@v1.0.1
        with:
          zip-file: ${{env.ZIP_FILEPATH}}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE_TGBOT }}

      - name: Deploy to Production (master branch)
        if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request' # skip on PRs, deploy master branch to the production environment
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'story-telling-tgbot'
          package: ${{env.ZIP_FILEPATH}}
          publish-profile: ${{ secrets.WEBJOB_PUBLISH_PROFILE_PROD }}
          
      - name: Prepare .env file with project settings
        run: echo "BOT_TOKEN=${{secrets.BOT_TOKEN}}" >> .env |
            echo "OPEN_AI_TOKEN=${{secrets.OPEN_AI_TOKEN}}" >> .env